import { DocumentRequest } from "@/Contracts/Request";
import { useEffect, useState } from "react";
import { Checkbox, Input, Modal, Select } from "antd";

interface Props {
    values: Document;
    isOpenModal: boolean;
    createHandle: (request: DocumentRequest) => void;
    closeHandle: () => void;
};

export const CreateDocument = ({
        values, 
        isOpenModal, 
        createHandle, 
        closeHandle
    }: Props) => {
    const [title, setDocumentTitle]                                                     = useState<string>("");
    const [carModel, setCarModel]                                                       = useState<string>("");
    const [vin, setVin]                                                                 = useState<string>("");
    const [engineNumber, setEngineNumber]                                               = useState<string>("");
    const [mileage, setMileage]                                                         = useState<string>("");
    const [owner, setOwner]                                                             = useState<string>("");
    const [countOwners, setCountOwners]                                                 = useState<string>("");
    const [year, setYear]                                                               = useState<string>("");
    const [gearBox, setGearBox]                                                         = useState<string>("");
    const [color, setColor]                                                             = useState<string>("");
    const [countKeys, SetCountKeys]                                                     = useState<string>("");
    const [interior, setInterior]                                                       = useState<string>("");
    const [interriorComment, setInterriorComment]                                       = useState<string>("");
    const [centrRightStand, setCentrRightStand]                                         = useState<string>("");
    const [centrRightStandThickness, setCentrRightStandThickness]                       = useState<string>("");
    const [centrLeftStand, setCentrLeftStand]                                           = useState<string>("");
    const [centrLeftStandThickness, setCentrLeftStandThickness]                         = useState<string>("");
    const [thresholdRight, setThresholdRight]                                           = useState<string>("");
    const [thresholdRightThickness, setThresholdRightThickness]                         = useState<string>("");
    const [thresholdLeft, setThresholdLeft]                                             = useState<string>("");
    const [thresholdLeftThickness, setThresholdLeftThickness]                           = useState<string>("");
    const [bodyComment, setBodyComment]                                                 = useState<string>("");
    const [glasses, setGlasses]                                                         = useState<string>("");
    const [headlights, setHeadlights]                                                   = useState<string>("");
    const [mirrors, setMirrors]                                                         = useState<string>("");
    const [glassComment, setGlassComment]                                               = useState<string>("");
    const [engineOil, setEngineOil]                                                     = useState<string>("");
    const [gearBoxOil, setGearBoxOil]                                                   = useState<string>("");
    const [antifreeze, setAntifreeze]                                                   = useState<string>("");
    const [brakeFluid, setBrakeFluid]                                                   = useState<string>("");
    const [steeringFluid, setSteeringFluid]                                             = useState<string>("");
    const [engineSpaceComment, setEngineSpaceComment]                                   = useState<string>("");
    const [yearTire, setYearTire]                                                       = useState<string>("");
    const [remainingTire, setRemainingTire]                                             = useState<string>("");
    const [secondComplect, setSecondComplect]                                           = useState<string>("");
    const [wheelComplectComment, setWheelComplectComment]                               = useState<string>("");
    const [wheelBearings, setWheelBearings]                                             = useState<string>("");
    const [shockAbsorbers, setShockAbsorbers]                                           = useState<string>("");
    const [suspensionArms, setSuspensionArms]                                           = useState<string>("");
    const [stabilizer, setStabilizer]                                                   = useState<string>("");
    const [steeringTips, setSteeringTips]                                               = useState<string>("");
    const [steeringRack, setSteeringRack]                                               = useState<string>("");
    const [engineSump, setEngineSump]                                                   = useState<string>("");
    const [gearBoxSound, setGearBoxSound]                                               = useState<string>("");
    const [otherElements, setOtherElements]                                             = useState<string>("");
    const [engineError, setEngineError]                                                 = useState<string>("");
    const [gearBoxError, setGearBoxError]                                               = useState<string>("");
    const [absError, setAbsError]                                                       = useState<string>("");
    const [airbagError, setAirbagError]                                                 = useState<string>("");
    const [addControlUnits, setAddControlUnits]                                         = useState<string>("");
    const [mileageCompliance, setMileageCompliance]                                     = useState<string>("");
    const [computerDiagnosticComment, setComputerDiagnosticComment]                     = useState<string>("");
    const [gearBoxShifts, setGearBoxShifts]                                             = useState<string>("");
    const [gearBoxShiftsAcceleration, setGearBoxShiftsAcceleration]                     = useState<string>("");
    const [gearBoxShiftsBreaking, setGearBoxShiftsBreaking]                             = useState<string>("");
    const [gearBoxShiftsCoasting, setGearBoxShiftsCoasting]                             = useState<string>("");
    const [gearBoxComment, setGearBoxComment]                                           = useState<string>("");
    const [vibrationsDriving, setVibrationsDriving]                                     = useState<string>("");
    const [vibrationsBreaking, setVibrationsBreaking]                                   = useState<string>("");
    const [soundsDriving, setSoundsDriving]                                             = useState<string>("");
    const [soundsDrivingBumps, setSoundsDrivingBumps]                                   = useState<string>("");
    const [suspentionComment, setSuspentionComment]                                     = useState<string>("");
    const [brakePadWear, setBrakePadWear]                                               = useState<string>("");
    const [brakeDiskWear, setBrakeDiskWear]                                             = useState<string>("");
    const [brakeSystemComment, setBrakeSystemComment]                                   = useState<string>("");
    const [folding, setFolding]                                                         = useState<string>("");
    const [adjustment, setAdjustment]                                                   = useState<string>("");
    const [heating, setHeating]                                                         = useState<string>("");
    const [seatHeating, setSeatHeating]                                                 = useState<string>("");
    const [rearWindowHeating, setRearWindowHeating]                                     = useState<string>("");
    const [windshieldHeating, setWindshieldHeating]                                     = useState<string>("");
    const [controlsOperationComment, setControlsOperationComment]                       = useState<string>("");
    const [checkingModes, setCheckingModes]                                             = useState<string>("");
    const [panelIndication, setPanelIndication]                                         = useState<string>("");
    const [awdComment, setAwdComment]                                                   = useState<string>("");
    const [coldStartEngine, setColdStartEngine]                                         = useState<string>("");
    const [difficultStartEngine, setDifficultStartEngine]                               = useState<string>("");
    const [otherSounds, setOtherSounds]                                                 = useState<string>("");
    const [strongVibration, setStrongVibration]                                         = useState<string>("");
    const [startEngineComment, setStartEngineComment]                                   = useState<string>("");
    const [compressorOperation, setCompressorOperation]                                 = useState<string>("");
    const [freonAvailability, setFreonAvailability]                                     = useState<string>("");
    const [driveBeltCondition, setDriveBeltCondition]                                   = useState<string>("");
    const [conditionerOperationComment, setConditionerOperationComment]                 = useState<string>("");
    const [restrictions, setRestrictions]                                               = useState<string>("");
    const [subject–°ollateral, setSubject–°ollateral]                                     = useState<string>("");
    const [fines, setFines]                                                             = useState<string>("");
    const [accidentArticipation, setAccidentArticipation]                               = useState<string>("");
    const [carWanted, setCarWanted]                                                     = useState<string>("");
    const [vinNumberMatch, setVinNumberMatch]                                           = useState<string>("");
    const [legalCheckComment, setLegalCheckComment]                                     = useState<string>("");
    const [testDrive, setTestDrive]                                                     = useState<string>("");
    const [timingDrive, setTimingDrive]                                                 = useState<string>("");
    const [engineOilAndFilter, setEngineOilAndFilter]                                   = useState<string>("");
    const [checkWheelsAngle, setCheckWheelsAngle]                                       = useState<string>("");
    const [recommendationsComment, setRecommendationsComment]                           = useState<string>("");

    useEffect(() => {
        setDocumentTitle(values.documentTitle);
        setCarModel(values.carModel);
        setVin(values.vin);
        setEngineNumber(values.engineNumber);
        setMileage(values.mileage);
        setOwner(values.owner);
        setCountOwners(values.countOwners);
        setYear(values.year);
        setGearBox(values.gearBox);
        setColor(values.color);
        SetCountKeys(values.countKeys);
        setInterior(values.interior);
        setInterriorComment(values.interior);
        setCentrRightStand(values.centrRightStand);
        setCentrRightStandThickness(values.centrRightStandThickness);
        setCentrLeftStand(values.centrLeftStand);
        setCentrLeftStandThickness(values.centrLeftStandThickness);
        setThresholdRight(values.thresholdRight);
        setThresholdRightThickness(values.thresholdRightThickness);
        setThresholdLeft(values.thresholdLeft);
        setThresholdLeftThickness(values.thresholdLeftThickness);
        setBodyComment(values.bodyComment);
        setGlasses(values.glasses);
        setHeadlights(values.headlights);
        setMirrors(values.mirrors);
        setGlassComment(values.glassComment);
        setEngineOil(values.engineOil);
        setGearBoxOil(values.gearBoxOil);
        setAntifreeze(values.antifreeze);
        setBrakeFluid(values.brakeFluid);
        setSteeringFluid(values.steeringFluid);
        setEngineSpaceComment(values.engineSpaceComment);
        setYearTire(values.yearTire);
        setRemainingTire(values.remainingTire);
        setSecondComplect(values.secondComplect);
        setWheelComplectComment(values.wheelComplectComment);
        setWheelBearings(values.wheelBearings);
        setShockAbsorbers(values.shockAbsorbers);
        setSuspensionArms(values.suspensionArms);
        setStabilizer(values.stabilizer);
        setSteeringTips(values.steeringTips);
        setSteeringRack(values.steeringRack);
        setEngineSump(values.engineSump);
        setGearBoxSound(values.gearBoxSound);
        setOtherElements(values.otherElements);
        setEngineError(values.engineError);
        setGearBoxError(values.gearBoxError);
        setAbsError(values.absError);
        setAirbagError(values.airbagError);
        setAddControlUnits(values.addControlUnits);
        setMileageCompliance(values.mileageCompliance);
        setComputerDiagnosticComment(values.computerDiagnosticComment);
        setGearBoxShifts(values.gearBoxShifts);
        setGearBoxShiftsAcceleration(values.gearBoxShiftsAcceleration);
        setGearBoxShiftsBreaking(values.gearBoxShiftsBreaking);
        setGearBoxShiftsCoasting(values.gearBoxShiftsCoasting);
        setGearBoxComment(values.gearBoxComment);
        setVibrationsDriving(values.vibrationsDriving);
        setVibrationsBreaking(values.vibrationsBreaking);
        setSoundsDriving(values.soundsDriving);
        setSoundsDrivingBumps(values.soundsDrivingBumps);
        setSuspentionComment(values.suspentionComment);
        setBrakePadWear(values.brakePadWear);
        setBrakeDiskWear(values.brakeDiskWear);
        setBrakeSystemComment(values.brakeSystemComment);
        setFolding(values.folding);
        setAdjustment(values.adjustment);
        setHeating(values.heating);
        setSeatHeating(values.seatHeating);
        setRearWindowHeating(values.rearWindowHeating);
        setWindshieldHeating(values.windshieldHeating);
        setControlsOperationComment(values.controlsOperationComment);
        setCheckingModes(values.checkingModes);
        setPanelIndication(values.panelIndication);
        setAwdComment(values.awdComment);
        setColdStartEngine(values.coldStartEngine);
        setDifficultStartEngine(values.difficultStartEngine);
        setOtherSounds(values.otherSounds);
        setStrongVibration(values.strongVibration);
        setStartEngineComment(values.startEngineComment);
        setCompressorOperation(values.compressorOperation);
        setFreonAvailability(values.freonAvailability);
        setDriveBeltCondition(values.driveBeltCondition);
        setConditionerOperationComment(values.conditionerOperationComment);
        setRestrictions(values.restrictions);
        setSubject–°ollateral(values.subject–°ollateral);
        setFines(values.fines);
        setAccidentArticipation(values.accidentArticipation);
        setCarWanted(values.carWanted);
        setVinNumberMatch(values.vinNumberMatch);
        setLegalCheckComment(values.legalCheckComment);
        setTestDrive(values.testDrive);
        setTimingDrive(values.timingDrive);
        setEngineOilAndFilter(values.engineOilAndFilter);
        setCheckWheelsAngle(values.checkWheelsAngle);
        setRecommendationsComment(values.recommendationsComment);
    }, [values]);

    const handleOnOk = async() => {
        const documentRequest = {
            title,
            carModel,
            vin,
            engineNumber,
            mileage,
            owner,
            countOwners,
            year,
            gearBox,
            color,
            countKeys,
            interior,
            interriorComment,
            centrRightStand,
            centrRightStandThickness,
            centrLeftStand,
            centrLeftStandThickness,
            thresholdRight,
            thresholdRightThickness,
            thresholdLeft,
            thresholdLeftThickness,
            bodyComment,
            glasses,
            headlights,
            mirrors,
            glassComment,
            engineOil,
            gearBoxOil,
            antifreeze,
            brakeFluid,
            steeringFluid,
            engineSpaceComment,
            yearTire,
            remainingTire,
            secondComplect,
            wheelComplectComment,
            wheelBearings,
            shockAbsorbers,
            suspensionArms,
            stabilizer,
            steeringTips,
            steeringRack,
            engineSump,
            gearBoxSound,
            otherElements,
            engineError,
            gearBoxError,
            absError,
            airbagError,
            addControlUnits,
            mileageCompliance,
            computerDiagnosticComment,
            gearBoxShifts,
            gearBoxShiftsAcceleration,
            gearBoxShiftsBreaking,
            gearBoxShiftsCoasting,
            gearBoxComment,
            vibrationsDriving,
            vibrationsBreaking,
            soundsDriving,
            soundsDrivingBumps,
            suspentionComment,
            brakePadWear,
            brakeDiskWear,
            brakeSystemComment,
            folding,
            adjustment,
            heating,
            seatHeating,
            rearWindowHeating,
            windshieldHeating,
            controlsOperationComment,
            checkingModes,
            panelIndication,
            awdComment,
            coldStartEngine,
            difficultStartEngine,
            otherSounds,
            strongVibration,
            startEngineComment,
            compressorOperation,
            freonAvailability,
            driveBeltCondition,
            conditionerOperationComment,
            restrictions,
            subject–°ollateral,
            fines,
            accidentArticipation,
            carWanted,
            vinNumberMatch,
            legalCheckComment,
            testDrive,
            timingDrive,
            engineOilAndFilter,
            checkWheelsAngle,
            recommendationsComment
        };

        createHandle(documentRequest)
    };

    return (
        <Modal open={isOpenModal} onOk={handleOnOk} cancelText='–û—Ç–º–µ–Ω–∏—Ç—å' onCancel={closeHandle}>
            <div style={{padding: "1px"}}>
                <div>
                    <h2>–û–°–ù–û–í–ù–û–ï</h2>
                    <div>
                        <label>–ù–∞–∑–≤–∞–Ω–∏–µ:</label>
                        <Input value={title} onChange={(e) => setDocumentTitle(e.target.value)}/>
                    </div>
                    <div>
                        <label>–ú–∞—Ä–∫–∞, –º–æ–¥–µ–ª—å:</label>
                        <Input value={carModel} onChange={(e) => setCarModel(e.target.value)}/>
                    </div>
                    <div>
                        <label>VIN:</label>
                        <Input value={vin} onChange={(e) => setVin(e.target.value)}/>
                    </div>
                    <div>
                        <label>‚Ññ –¥–≤–∏–≥–∞—Ç–µ–ª—è:</label>
                        <Input value={engineNumber} onChange={(e) => setEngineNumber(e.target.value)}/>
                    </div>
                    <div>
                        <label>–ü—Ä–æ–±–µ–≥ –Ω–∞ –ø–∞–Ω–µ–ª–∏:</label>
                        <Input value={mileage} onChange={(e) => setMileage(e.target.value)}/>
                    </div>
                    <div className="input-block">
                        <label>–ü—Ä–æ–¥–∞–≤–µ—Ü:</label>
                        <Select>
                            <Select.Option>–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∏–∫</Select.Option>
                            <Select.Option>–î–∏–ª–µ—Ä</Select.Option>
                            <Select.Option>–ü–æ—Å—Ä–µ–¥–Ω–∏–∫</Select.Option>
                            <Select.Option>–Æ—Ä. –ª–∏—Ü–æ</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ö–æ–ª-–≤–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤ –ø–æ –ü–¢–°:</label>
                        <Input value={countOwners} onChange={(e) => setCountOwners(e.target.value)}/>
                    </div>
                    <div>
                        <label>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞:</label>
                        <Input value={year} onChange={(e) => setYear(e.target.value)}/>
                    </div>
                    <div>
                        <label>–ö–ü–ü:</label>
                        <Input value={gearBox} onChange={(e) => setGearBox(e.target.value)}/>
                    </div>
                    <div>
                        <label>–¶–≤–µ—Ç:</label>
                        <Input value={color} onChange={(e) => setColor(e.target.value)}/>
                    </div>
                    <div>
                        <label>–ö–æ–ª-–≤–æ –∫–ª—é—á–µ–π:</label>
                        <Input value={countKeys} onChange={(e) => SetCountKeys(e.target.value)}/>
                    </div>
                    <div className="input-block">
                        <label>–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∞–ª–æ–Ω–∞:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–î–µ—Ñ–µ–∫—Ç—ã</Select.Option>
                            <Select.Option>–¢—Ä–µ–±—É–µ—Ç—Å—è —Ö–∏–º—á–∏—Å—Ç–∫–∞</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                        <Input value={interriorComment} onChange={(e) => setInterriorComment(e.target.value)}/>
                    </div>
                </div>

                <div>
                    <h2>–°–û–°–¢–û–Ø–ù–ò–ï –ö–£–ó–û–í–ê</h2>
                    <div>
                        <label>–¶–µ–Ω—Ç—Ä. —Å—Ç–æ–π–∫–∞ –ø—Ä–∞–≤–∞—è:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–¢–æ–ª—â–∏–Ω–∞ –õ–ö–ü:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–¶–µ–Ω—Ç—Ä. —Å—Ç–æ–π–∫–∞ –ª–µ–≤–∞—è:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–¢–æ–ª—â–∏–Ω–∞ –õ–ö–ü:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–ü–æ—Ä–æ–≥ –ø—Ä–∞–≤—ã–π:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–¢–æ–ª—â–∏–Ω–∞ –õ–ö–ü:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–ü–æ—Ä–æ–≥ –ª–µ–≤—ã–π:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–¢–æ–ª—â–∏–Ω–∞ –õ–ö–ü:</label>
                        <Input/>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ —Å–æ—Å—Ç. –∫—É–∑–æ–≤–∞:</label>
                        <Input/>
                    </div>
                </div>

                <div>
                    <h2>–û–°–¢–ï–ö–õ–ï–ù–ò–ï –ò –°–í–ï–¢–û–í–´–ï –ü–†–ò–ë–û–†–´</h2>
                    <div className="input-block">
                        <label>–°—Ç–µ–∫–ª–∞:</label>
                        <Select>
                            <Select.Option>–û—Ä–∏–≥–∏–Ω–∞–ª</Select.Option>
                            <Select.Option>–ù–µ –æ—Ä–∏–≥–∏–Ω–∞–ª</Select.Option>
                            <Select.Option>–¢—Ä–µ–±. –∑–∞–º–µ–Ω—ã</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–§–∞—Ä—ã/—Ñ–æ–Ω–∞—Ä–∏:</label>
                        <Select>
                            <Select.Option>–û—Ä–∏–≥–∏–Ω–∞–ª</Select.Option>
                            <Select.Option>–ù–µ –æ—Ä–∏–≥–∏–Ω–∞–ª</Select.Option>
                            <Select.Option>–¢—Ä–µ–±. –∑–∞–º–µ–Ω—ã</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ó–µ—Ä–∫–∞–ª–∞:</label>
                        <Select>
                            <Select.Option>–ë–µ–∑ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏–π</Select.Option>
                            <Select.Option>–ü–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è</Select.Option>
                            <Select.Option>–¢—Ä–µ–±. –∑–∞–º–µ–Ω—ã</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ –æ—Å—Ç–µ–∫–ª–µ–Ω–∏—é –∏ —Å–≤–µ—Ç. –ø—Ä–∏–±–æ—Ä–∞–º:</label>
                        <Input value={glassComment} onChange={(e) => setGlassComment(e.target.value)}/>
                    </div>
                </div>

                <div>
                    <h2>–ü–û–î–ö–ê–ü–û–¢–ù–û–ï –ü–†–û–°–¢–†–ê–ù–°–¢–í–û</h2>
                    <div className="input-block">
                        <label>–ú–∞—Å–ª–æ –î–í–°:</label>
                        <Select>
                            <Select.Option>–£—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–ù–µ —É—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–≠–º—É–ª—å—Å–∏—è</Select.Option>
                            <Select.Option>–ù–∞–≥–∞—Ä</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ú–∞—Å–ª–æ –ö–ü–ü:</label>
                        <Select>
                            <Select.Option>–£—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–ù–µ —É—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–ó–∞–ø–∞—Ö –≥–∞—Ä–∏</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ê–Ω—Ç–∏—Ñ—Ä–∏–∑:</label>
                        <Select>
                            <Select.Option>–£—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–ù–µ —É—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–°–ª–µ–¥—ã –º–∞—Å–ª–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–¢–æ—Ä–º–æ–∑–Ω–∞—è –∂–∏–¥–∫–æ—Å—Ç—å:</label>
                        <Select>
                            <Select.Option>–£—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–ù–µ —É—Ä–æ–≤–µ–Ω—å</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ñ–∏–¥–∫–æ—Å—Ç—å –ì–£–†:</label>
                        <Select>
                            <Select.Option>–£—Ä–æ–≤–µ–Ω—å</Select.Option>
                            <Select.Option>–ù–µ —É—Ä–æ–≤–µ–Ω—å</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                        <Input value={engineSpaceComment} onChange={(e) => setEngineSpaceComment(e.target.value)}/>
                    </div>
                </div>
                
                <div>
                    <h2>–°–û–°–¢–û–Ø–ù–ò–ï –ö–û–õ–ï–° (–î–ò–°–ö–ò/–†–ï–ó–ò–ù–ê)</h2>
                    <div>
                        <label>–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞ —Ä–µ–∑–∏–Ω—ã:</label>
                        <div className="flex">
                            <div>
                                <div>
                                    <label>–ü.–ø.</label>
                                    <Input/>
                                </div>
                                <div>
                                    <label>–ü.–ª.</label>
                                    <Input/>
                                </div>
                            </div>
                            
                            <div>
                                <div>
                                    <label>–ó.–ø.</label>
                                    <Input/>
                                </div>
                                <div>
                                    <label>–ó.–ª.</label>
                                    <Input/>
                                </div>
                            </div>
                        </div>
                        <div>
                            <label>–ï—Å—Ç—å —Ñ–æ—Ç–æ:</label>
                            <Checkbox/>
                        </div>
                    </div>
                    <div>
                        <label>–û—Å—Ç–∞—Ç–æ–∫ —Ä–µ–∑–∏–Ω—ã –≤ %:</label>
                        <div className="flex">
                            <div>
                                <div>
                                    <label>–ü.–ø.</label>
                                    <Input/>
                                </div>
                                <div>
                                    <label>–ü.–ª.</label>
                                    <Input/>
                                </div>
                            </div>
                            
                            <div>
                                <div>
                                    <label>–ó.–ø.</label>
                                    <Input/>
                                </div>
                                <div>
                                    <label>–ó.–ª.</label>
                                    <Input/>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div>
                        <div className="input-block">
                            <label>–í—Ç–æ—Ä–æ–π –∫–æ–º–ø–ª–µ–∫—Ç:</label>
                            <Select>
                                <Select.Option>–ï—Å—Ç—å</Select.Option>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                            </Select>
                        </div>

                        <div>
                            <label>–ï—Å—Ç—å —Ñ–æ—Ç–æ:</label>
                            <Checkbox/>
                        </div>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                        <Input value={wheelComplectComment} onChange={(e) => setWheelComplectComment(e.target.value)}/>
                    </div>
                </div>

                <div>
                    <h2>–û–°–ú–û–¢–† –ù–ê –ü–û–î–™–ï–ú–ù–ò–ö–ï</h2>
                    <div className="input-block">
                        <label>–°—Ç—É–ø–∏—á–Ω—ã–µ –ø–æ–¥—à–∏–ø–Ω–∏–∫–∏:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã, –æ—Ç–±–æ–π–Ω–∏–∫–∏, –ø—Ä—É–∂–∏–Ω—ã:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–†—ã—á–∞–≥–∏ –ø–æ–¥–≤–µ—Å–∫–∏:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–°—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä/–í—Ç—É–ª–∫–∏/–°—Ç–æ–π–∫–∏</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–†—É–ª–µ–≤—ã–µ –Ω–∞–∫–æ–Ω–µ—á–Ω–∏–∫–∏/—Ç—è–≥–∏</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–†—É–ª–µ–≤–∞—è —Ä–µ–π–∫–∞:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ü–æ–¥–¥–æ–Ω –î–í–°/–°–∞–ª—å–Ω–∏–∫ –ö–í:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ö–ü–ü:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–î—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã:</label>
                        <Input value={otherElements} onChange={(e) => setOtherElements(e.target.value)}/>
                    </div>
                </div>
                
                <div>
                    <h2>–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –¢–ï–•–ù–ò–ß–ï–°–ö–û–ì–û –°–û–°–¢–û–Ø–ù–ò–Ø</h2>

                    <div className="diagnostic-block">
                        <h3>1. –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞/–û—à–∏–±–∫–∏</h3>
                        <div className="input-block">
                            <label>–î–í–°:</label>
                            <Select>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                                <Select.Option>–ï—Å—Ç—å</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–ê–ö–ü–ü/–ú–ö–ü–ü:</label>
                            <Select>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                                <Select.Option>–ï—Å—Ç—å</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>ABS:</label>
                            <Select>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                                <Select.Option>–ï—Å—Ç—å</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>AIRBAG:</label>
                            <Select>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                                <Select.Option>–ï—Å—Ç—å</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–î–æ–ø. –±–ª–æ–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:</label>
                            <Select>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                                <Select.Option>–ï—Å—Ç—å</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–æ–±–µ–≥–∞:</label>
                            <Select>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                                <Select.Option>–î–∞</Select.Option>
                                <Select.Option>–ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω</Select.Option>
                            </Select>
                        </div>
                        <div>
                            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                            <Input value={computerDiagnosticComment} onChange={(e) => setComputerDiagnosticComment(e.target.value)}/>
                        </div>
                    </div>

                    <div className="diagnostic-block">
                        <h3>2. –†–∞–±–æ—Ç–∞ –ö–ü–ü</h3>
                        <div className="input-block">
                            <label>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ú–ö–ü–ü:</label>
                            <Select>
                                <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ä–∞–∑–≥–æ–Ω–µ:</label>
                            <Select>
                                <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–∏:</label>
                            <Select>
                                <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –µ–∑–¥–µ –Ω–∞–∫–∞—Ç–æ–º:</label>
                            <Select>
                                <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                            </Select>
                        </div>
                        <div>
                            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                            <Input value={gearBoxComment} onChange={(e) => setGearBoxComment(e.target.value)}/>
                        </div>
                    </div>

                    <div className="diagnostic-block">
                        <h3>3. –ü–æ–¥–≤–µ—Å–∫–∞ –∏ —Ä—É–ª–µ–≤–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h3>
                        <div className="input-block">
                            <label>–í–∏–±—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏:</label>
                            <Select>
                                <Select.Option>–î–∞</Select.Option>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–í–∏–±—Ä–∞—Ü–∏–∏ –ø—Ä–∏ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–∏:</label>
                            <Select>
                                <Select.Option>–î–∞</Select.Option>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–ü–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∑–≤—É–∫–∏ –ø—Ä–∏ –¥–≤–∏–∂–µ–Ω–∏–∏:</label>
                            <Select>
                                <Select.Option>–î–∞</Select.Option>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–ü–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∑–≤—É–∫–∏ –ø—Ä–∏ –ø—Ä–æ–µ–∑–¥–µ –Ω–µ—Ä–æ–≤–æ—Å—Ç–µ–π:</label>
                            <Select>
                                <Select.Option>–î–∞</Select.Option>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                            </Select>
                        </div>
                        <div>
                            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                            <Input value={suspentionComment} onChange={(e) => setSuspentionComment(e.target.value)}/>
                        </div>
                    </div>

                    <div className="diagnostic-block">
                        <h3>4. –¢–æ—Ä–º–æ–∑–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</h3>
                        <div>
                            <label>–ò–∑–Ω–æ—Å —Ç–æ—Ä–æ–∑–Ω—ã—Ö –∫–æ–ª–æ–¥–æ–∫:</label>
                            <div className="flex">
                                <div>
                                    <div>
                                        <label>–ü.–ø.</label>
                                        <Input/>
                                    </div>
                                    <div>
                                        <label>–ü.–ª.</label>
                                        <Input/>
                                    </div>
                                </div>
                                
                                <div>
                                    <div>
                                        <label>–ó.–ø.</label>
                                        <Input/>
                                    </div>
                                    <div>
                                        <label>–ó.–ª.</label>
                                        <Input/>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div>
                            <label>–ò–∑–Ω–æ—Å —Ç–æ—Ä–æ–∑–Ω—ã—Ö –¥–∏—Å–∫–æ–≤ –≤ %:</label>
                            <div className="flex">
                                <div>
                                    <div>
                                        <label>–ü.–ø.</label>
                                        <Input/>
                                    </div>
                                    <div>
                                        <label>–ü.–ª.</label>
                                        <Input/>
                                    </div>
                                </div>
                                
                                <div>
                                    <div>
                                        <label>–ó.–ø.</label>
                                        <Input/>
                                    </div>
                                    <div>
                                        <label>–ó.–ª.</label>
                                        <Input/>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div>
                            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                            <Input value={brakeSystemComment} onChange={(e) => setBrakeSystemComment(e.target.value)}/>
                        </div>
                    </div>

                    <div className="diagnostic-block">
                        <h3>5. –†–∞–±–æ—Ç–∞ –æ—Ä–≥–∞–Ω–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Å–≤–µ—Ç–æ–≤—ã—Ö –ø—Ä–∏–±–æ—Ä–æ–≤</h3>
                        <div>
                            <h4>–ë–æ–∫–æ–≤—ã–µ –∑–µ—Ä–∫–∞–ª–∞</h4>
                            <div className="input-block">
                                <label>–°–∫–ª–∞–¥—ã–≤–∞–Ω–∏—è:</label>
                                <Select>
                                    <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                    <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                                </Select>
                            </div>
                            <div className="input-block">
                                <label>–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞:</label>
                                <Select>
                                    <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                    <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                                </Select>
                            </div>
                            <div className="input-block">
                                <label>–û–±–æ–≥—Ä–µ–≤:</label>
                                <Select>
                                    <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                    <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                                </Select>
                            </div>
                        </div>
                        <div>
                            <h4>–û–±–æ–≥—Ä–µ–≤</h4>
                            <div className="input-block">
                                <label>–°–∏–¥–µ–Ω—å—è:</label>
                                <Select>
                                    <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                    <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                                </Select>
                            </div>
                            <div className="input-block">
                                <label>–ó–∞–¥–Ω–µ–µ —Å—Ç–µ–∫–ª–æ:</label>
                                <Select>
                                    <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                    <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                                </Select>
                            </div>
                            <div className="input-block">
                                <label>–õ–æ–±–æ–≤–æ–µ —Å—Ç–µ–∫–ª–æ:</label>
                                <Select>
                                    <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                    <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                                </Select>
                            </div>
                        </div>
                        <div>
                            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                            <Input value={controlsOperationComment} onChange={(e) => setControlsOperationComment(e.target.value)}/>
                        </div>
                    </div>

                    <div className="diagnostic-block">
                        <h3>6. –ü–æ–ª–Ω—ã–π –ø—Ä–∏–≤–æ–¥</h3>
                        <div className="input-block">
                            <label>–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–æ–≤:</label>
                            <Select>
                                <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                                <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                            </Select>
                        </div>
                        <div className="input-block">
                            <label>–ò–Ω–¥–∏–∫–∞—Ü–∏—è –Ω–∞ –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏–±–æ—Ä–æ–≤:</label>
                            <Select>
                                <Select.Option>–ï—Å—Ç—å</Select.Option>
                                <Select.Option>–ú–∏–≥–∞–µ—Ç</Select.Option>
                                <Select.Option>–ù–µ—Ç</Select.Option>
                            </Select>
                        </div>
                        <div>
                            <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                            <Input value={awdComment} onChange={(e) => setAwdComment(e.target.value)}/>
                        </div>
                    </div>
                </div>

                <div>
                    <h2>–ü–£–°–ö –î–í–ò–ì–ê–¢–ï–õ–Ø</h2>
                    <div className="input-block">
                        <label>–•–æ–ª–æ–¥–Ω—ã–π –ø—É—Å–∫ –¥–≤–∏–≥–∞—Ç–µ–ª—è:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ó–∞—Ç—Ä—É–¥–Ω–µ–Ω–Ω—ã–π –ø—É—Å–∫:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ü–æ—Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –∑–≤—É–∫–∏:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–°–∏–ª—å–Ω–∞—è –≤–∏–±—Ä–∞—Ü–∏—è:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                        <Input value={startEngineComment} onChange={(e) => setStartEngineComment(e.target.value)}/>
                    </div>
                </div>

                <div>
                    <h2>–†–ê–ë–û–¢–ê –ö–û–ù–î–ò–¶–ò–û–ù–ï–†–ê</h2>
                    <div className="input-block">
                        <label>–†–∞–±–æ—Ç–∞ –∫–æ–Ω–¥–∏—Ü–∏–æ–Ω–µ—Ä–∞ AC</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ù–∞–ª–∏—á–∏–µ —Ñ—Ä–µ–æ–Ω–∞:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–≤–æ–¥–Ω–æ–≥–æ —Ä–µ–º–Ω—è:</label>
                        <Select>
                            <Select.Option>–ù–æ—Ä–º–∞</Select.Option>
                            <Select.Option>–ù–µ –Ω–æ—Ä–º–∞</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                        <Input value={conditionerOperationComment} onChange={(e) => setConditionerOperationComment(e.target.value)}/>
                    </div>
                </div>

                <div>
                    <h2>–Æ–†–ò–î–ò–ß–ï–°–ö–ê–Ø –ü–†–û–í–ï–†–ö–ê</h2>
                    <div className="input-block">
                        <label>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ —Ä–µ–≥–∏—Å—Ç. –¥–µ–π—Å—Ç–≤–∏—è:</label>
                        <Select>
                            <Select.Option>–ï—Å—Ç—å</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ü—Ä–µ–¥–º–µ—Ç –∑–∞–ª–æ–≥–∞:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>VIN –Ω–æ–º–µ—Ä, ‚Ññ –¥–≤–∏–≥–∞—Ç–µ–ª—è, VIN –≤ –±–ª–æ–∫–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è, –Ω–æ–º–µ—Ä —Ä–∞–º—ã —Å–æ–≤–ø–∞–¥–∞–µ—Ç –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–®—Ç—Ä–∞—Ñ—ã:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–£—á–∞—Å—Ç–∏—è –≤ –î–¢–ü:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>–ù–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è –≤ —Ä–æ–∑—ã—Å–∫–µ:</label>
                        <Select>
                            <Select.Option>–î–∞</Select.Option>
                            <Select.Option>–ù–µ—Ç</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                        <Input value={legalCheckComment} onChange={(e) => setLegalCheckComment(e.target.value)}/>
                    </div>
                </div>

                <div>
                    <label>–¢–µ—Å—Ç-–¥—Ä–∞–π–≤:</label>
                    <Input value={testDrive} onChange={(e) => setTestDrive(e.target.value)}/>
                </div>

                <div>
                    <h2>–†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –°–ü–ï–¶–ò–ê–õ–ò–°–¢–ê</h2>
                    <div className="input-block">
                        <label>1) –ü—Ä–∏–≤–æ–¥ –ì–†–ú</label>
                        <Select>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                            <Select.Option>–ö–æ–Ω—Ç—Ä–æ–ª—å</Select.Option>
                        </Select>
                    </div>
                    <div className="input-block">
                        <label>2) –ú–∞—Å–ª–æ –≤ –î–í–°, –º–∞—Å–ª—è–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä:</label>
                        <Select>
                            <Select.Option>–ó–∞–º–µ–Ω–∞</Select.Option>
                            <Select.Option>–ö–æ–Ω—Ç—Ä–æ–ª—å</Select.Option>
                        </Select>
                    </div>
                    <div>
                        <label>–ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≥–ª–∞ —Ä–µ–≥—É–ª–∏—Ä–æ–≤–∫–∏ –∫–æ–ª–µ—Å:</label>
                        <Input value={checkWheelsAngle} onChange={(e) => setCheckWheelsAngle(e.target.value)}/>
                    </div>
                    <div>
                        <label>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</label>
                        <Input value={recommendationsComment} onChange={(e) => setRecommendationsComment(e.target.value)}/>
                    </div>
                </div>
            </div>
        </Modal>
    )
}